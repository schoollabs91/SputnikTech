package com.lab.kot.school.model.eo;

import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 31 19:17:04 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SNoticeBoardEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        NId,
        NSubject,
        NContent,
        NPublishDate,
        NPublishBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int NID = AttributesEnum.NId.index();
    public static final int NSUBJECT = AttributesEnum.NSubject.index();
    public static final int NCONTENT = AttributesEnum.NContent.index();
    public static final int NPUBLISHDATE = AttributesEnum.NPublishDate.index();
    public static final int NPUBLISHBY = AttributesEnum.NPublishBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SNoticeBoardEOImpl() {
    }

    /**
     * Gets the attribute value for NId, using the alias name NId.
     * @return the value of NId
     */
    public Long getNId() {
        return (Long) getAttributeInternal(NID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NId.
     * @param value value to set the NId
     */
    public void setNId(Long value) {
        setAttributeInternal(NID, value);
    }

    /**
     * Gets the attribute value for NSubject, using the alias name NSubject.
     * @return the value of NSubject
     */
    public String getNSubject() {
        return (String) getAttributeInternal(NSUBJECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for NSubject.
     * @param value value to set the NSubject
     */
    public void setNSubject(String value) {
        setAttributeInternal(NSUBJECT, value);
    }

    /**
     * Gets the attribute value for NContent, using the alias name NContent.
     * @return the value of NContent
     */
    public String getNContent() {
        return (String) getAttributeInternal(NCONTENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for NContent.
     * @param value value to set the NContent
     */
    public void setNContent(String value) {
        setAttributeInternal(NCONTENT, value);
    }

    /**
     * Gets the attribute value for NPublishDate, using the alias name NPublishDate.
     * @return the value of NPublishDate
     */
    public Date getNPublishDate() {
        return (Date) getAttributeInternal(NPUBLISHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NPublishDate.
     * @param value value to set the NPublishDate
     */
    public void setNPublishDate(Date value) {
        setAttributeInternal(NPUBLISHDATE, value);
    }

    /**
     * Gets the attribute value for NPublishBy, using the alias name NPublishBy.
     * @return the value of NPublishBy
     */
    public String getNPublishBy() {
        return (String) getAttributeInternal(NPUBLISHBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for NPublishBy.
     * @param value value to set the NPublishBy
     */
    public void setNPublishBy(String value) {
        setAttributeInternal(NPUBLISHBY, value);
    }

    /**
     * @param nId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Long nId) {
        return new Key(new Object[] { nId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.lab.kot.school.model.eo.SNoticeBoardEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl tranSeq = new SequenceImpl("LIST_ID", this.getDBTransaction());        
        Number tNumber = tranSeq.getSequenceNumber();
        this.setNId(tNumber.longValue());
    }
}

